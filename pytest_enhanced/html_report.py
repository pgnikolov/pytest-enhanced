from __future__ import annotations

from pathlib import Path
from datetime import datetime
from typing import Optional

from .analysis import get_session_stats
from .utils import format_duration


def export_html_report(output_path: Optional[Path | str] = None) -> None:
    """
    Generates an HTML report summarizing the results of pytest tests. The report includes
    sections for overall test statistics, a list of the slowest tests, flaky tests statistics,
    and a graphical representation of the test pass-rate history. If no test execution data
    is available, the function terminates with a message.

    :param output_path: Optional file path for saving the generated report. Defaults to
        "pytest_enhanced_report.html" if not provided.
    :return: None
    """
    stats = get_session_stats()
    if stats is None:
        print("‚ùå No test runs found. Run pytest with --enhanced first.")
        return

    if not output_path:
        output_path = Path("pytest_enhanced_report.html")
    else:
        output_path = Path(output_path)

    summary = stats["summary"]
    slow = stats["slow_tests"]
    flaky = stats["flaky_tests"]
    hist = stats["history"]

    total = summary["total"]
    passed = summary["passed"]
    failed = summary["failed"]
    skipped = summary["skipped"]
    pass_rate = f"{stats['pass_rate']:.1f}%"

    # HTML Structure
    html = f"""<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<title>Pytest Enhanced Report</title>
<style>
body {{
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
  background: #f9fafb;
  margin: 40px;
  color: #111827;
}}
h1, h2 {{
  color: #2563eb;
}}
.container {{
  max-width: 960px;
  margin: 0 auto;
  background: #ffffff;
  padding: 24px 32px;
  border-radius: 12px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.05);
}}
.table {{
  border-collapse: collapse;
  width: 100%;
  margin-top: 12px;
}}
.table th, .table td {{
  border: 1px solid #e5e7eb;
  padding: 8px 10px;
  text-align: left;
}}
.table th {{
  background: #2563eb;
  color: white;
  font-weight: 600;
}}
.section {{
  margin-top: 32px;
}}
.pass-rate-bar {{
  display: flex;
  align-items: flex-end;
  gap: 6px;
  height: 60px;
}}
.bar {{
  width: 20px;
  background: #16a34a;
}}
.footer {{
  text-align: center;
  color: #6b7280;
  margin-top: 40px;
  font-size: 0.9em;
}}
</style>
</head>
<body>
<div class="container">
<h1>üìä Pytest Enhanced Report</h1>
<p><b>Generated:</b> {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}</p>
<p>
<b>Total tests:</b> {total} |
<b>Passed:</b> {passed} |
<b>Failed:</b> {failed} |
<b>Skipped:</b> {skipped} |
<b>Pass rate:</b> {pass_rate}
</p>
"""

    # Slow tests section
    html += """
<div class="section">
<h2>üê¢ Slowest Tests</h2>
"""
    if slow:
        html += '<table class="table"><tr><th>Test Name</th><th>Duration</th></tr>'
        for name, dur in slow:
            html += f"<tr><td>{name}</td><td>{format_duration(dur)}</td></tr>"
        html += "</table>"
    else:
        html += "<p>No slow tests recorded.</p>"
    html += "</div>"

    # Flaky tests section
    html += """
<div class="section">
<h2>üî• Flaky Tests</h2>
"""
    if flaky:
        html += '<table class="table"><tr><th>Test Name</th><th>Fails</th><th>Total Runs</th><th>Instability %</th></tr>'
        for name, fails, total_runs in flaky:
            pct = (fails / total_runs * 100.0) if total_runs else 0.0
            html += f"<tr><td>{name}</td><td>{fails}</td><td>{total_runs}</td><td>{pct:.1f}%</td></tr>"
        html += "</table>"
    else:
        html += "<p>No flaky tests detected (min 2 fails in last 20 runs).</p>"
    html += "</div>"

    # Pass rate history chart
    html += """
<div class="section">
<h2>üìà Pass Rate History</h2>
"""
    if hist:
        html += '<div class="pass-rate-bar">'
        max_rate = 100.0
        for run_id, rate in hist[::-1]:
            height = int((rate / max_rate) * 60)
            color = "#16a34a" if rate > 90 else "#eab308" if rate > 60 else "#dc2626"
            html += f'<div class="bar" title="Run {run_id}: {rate:.1f}%" style="height:{height}px;background:{color}"></div>'
        html += "</div>"
    else:
        html += "<p>No history data available.</p>"
    html += "</div>"

    # Footer
    html += f"""
<div class="footer">
<p>Generated by <b>pytest-enhanced</b> ‚Äî a smarter analytics layer for pytest.<br>
<a href="https://github.com/pgnikolov/pytest-enhanced">View on GitHub</a></p>
</div>
</div>
</body>
</html>
"""

    with open(output_path, "w", encoding="utf-8") as f:
        f.write(html)

    print(f"‚úÖ HTML report generated: {output_path.resolve()}")
